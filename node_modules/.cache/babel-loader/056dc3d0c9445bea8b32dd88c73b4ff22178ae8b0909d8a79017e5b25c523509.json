{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbamallee/3dmodel-store/src/ModelList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport sanityClient, { urlFor } from './sanityClient';\nimport ModelPopup from './ModelPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModelList() {\n  _s();\n  var _selectedModel$modelF, _selectedModel$modelF2;\n  const [models, setModels] = useState([]);\n  const [selectedModel, setSelectedModel] = useState(null);\n  useEffect(() => {\n    sanityClient.fetch('*[_type == \"threeDModel\"]{_id, title, description, modelFile, thumbnail}').then(data => {\n      console.log(\"Fetched models:\", data); // Log fetched data to confirm\n      setModels(data);\n    }).catch(error => console.error(\"Error fetching models:\", error));\n  }, []);\n  if (models.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No models found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-list\",\n    children: [models.map(model => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-card\",\n      onClick: () => {\n        console.log(\"Clicked model:\", model);\n        setSelectedModel(model);\n      },\n      children: [model.thumbnail && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(model.thumbnail).width(200).url(),\n        alt: model.title,\n        className: \"model-thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"model-title\",\n          children: model.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"model-description\",\n          children: model.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, model._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), selectedModel && /*#__PURE__*/_jsxDEV(ModelPopup, {\n      isOpen: true,\n      onClose: () => {\n        console.log(\"Closing popup\");\n        setSelectedModel(null);\n      },\n      modelTitle: selectedModel.title,\n      modelUrl: (_selectedModel$modelF = selectedModel.modelFile) === null || _selectedModel$modelF === void 0 ? void 0 : (_selectedModel$modelF2 = _selectedModel$modelF.asset) === null || _selectedModel$modelF2 === void 0 ? void 0 : _selectedModel$modelF2.url // Access model URL directly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelList, \"c0+kvFlTCbDkVSW/gxoREhOYDy8=\");\n_c = ModelList;\nvar _c;\n$RefreshReg$(_c, \"ModelList\");","map":{"version":3,"names":["React","useState","useEffect","sanityClient","urlFor","ModelPopup","jsxDEV","_jsxDEV","ModelList","_s","_selectedModel$modelF","_selectedModel$modelF2","models","setModels","selectedModel","setSelectedModel","fetch","then","data","console","log","catch","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","model","onClick","thumbnail","src","width","url","alt","title","description","_id","isOpen","onClose","modelTitle","modelUrl","modelFile","asset","_c","$RefreshReg$"],"sources":["/Users/ahmadbamallee/3dmodel-store/src/ModelList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport sanityClient, { urlFor } from './sanityClient';\nimport ModelPopup from './ModelPopup';\n\nexport default function ModelList() {\n  const [models, setModels] = useState([]);\n  const [selectedModel, setSelectedModel] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch('*[_type == \"threeDModel\"]{_id, title, description, modelFile, thumbnail}')\n      .then((data) => {\n        console.log(\"Fetched models:\", data); // Log fetched data to confirm\n        setModels(data);\n      })\n      .catch((error) => console.error(\"Error fetching models:\", error));\n  }, []);\n\n  if (models.length === 0) {\n    return <p>No models found.</p>;\n  }\n\n  return (\n    <div className=\"model-list\">\n      {models.map((model) => (\n        <div\n          key={model._id}\n          className=\"model-card\"\n          onClick={() => {\n            console.log(\"Clicked model:\", model);\n            setSelectedModel(model);\n          }}\n        >\n          {/* Use urlFor to get the thumbnail image URL */}\n          {model.thumbnail && (\n            <img\n              src={urlFor(model.thumbnail).width(200).url()}\n              alt={model.title}\n              className=\"model-thumbnail\"\n            />\n          )}\n          <div className=\"model-info\">\n            <h3 className=\"model-title\">{model.title}</h3>\n            <p className=\"model-description\">{model.description}</p>\n          </div>\n        </div>\n      ))}\n      {selectedModel && (\n        <ModelPopup\n          isOpen={true}\n          onClose={() => {\n            console.log(\"Closing popup\");\n            setSelectedModel(null);\n          }}\n          modelTitle={selectedModel.title}\n          modelUrl={selectedModel.modelFile?.asset?.url} // Access model URL directly\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}